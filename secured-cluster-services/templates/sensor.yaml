{{- include "srox.init" . -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sensor
  namespace: {{ ._rox._namespace }}
  labels:
    {{- include "srox.labels" (list . "deployment" "sensor") | nindent 4 }}
    app: sensor
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    {{- include "srox.annotations" (list . "deployment" "sensor") | nindent 4 }}
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: sensor
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sensor
        {{- include "srox.podLabels" (list . "deployment" "sensor") | nindent 8 }}
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8443,9443"
        {{- include "srox.podAnnotations" (list . "deployment" "sensor") | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # Sensor is single-homed, so avoid preemptible nodes.
            - weight: 100
              preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: NotIn
                    values:
                    - "true"
            {{- if ._rox.env.openshift }}
            - weight: 25
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: In
                    values:
                    - "true"
            - weight: 75
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: NotIn
                    values:
                    - "true"
            - weight: 100
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: NotIn
                    values:
                    - "true"
            {{- end}}
      securityContext:
        runAsUser: 4000
        fsGroup: 4000
      serviceAccountName: sensor
      containers:
      - image: {{ quote ._rox.image.main.fullRef }}
        imagePullPolicy: {{ ._rox.sensor.imagePullPolicy }}
        name: sensor
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /admissioncontroller
            port: 9443
        ports:
          - containerPort: 8443
            name: api
          - containerPort: 9443
            name: webhook
        command:
          - kubernetes-sensor
        resources:
          {{- ._rox.sensor._resources | nindent 10 }}
        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROX_CENTRAL_ENDPOINT
          value: {{ ._rox.centralEndpoint }}
        - name: ROX_ADVERTISED_ENDPOINT
          value: {{ ._rox.sensor.endpoint }}
        {{- if ._rox.env.openshift }}
        - name: ROX_OPENSHIFT_API
          value: "true"
        {{- end}}
        - name: ROX_HELM_CLUSTER_CONFIG_FP
          value: {{ quote ._rox._configFP }}
        {{- include "srox.envVars" (list . "deployment" "sensor" "sensor") | nindent 8 }}
        volumeMounts:
        - name: varlog
          mountPath: /var/log/stackrox/
        - name: sensor-etc-ssl-volume
          mountPath: /etc/ssl/
        - name: sensor-etc-pki-volume
          mountPath: /etc/pki/ca-trust/
        - name: certs
          mountPath: /run/secrets/stackrox.io/certs/
          readOnly: true
        - name: additional-ca-volume
          mountPath: /usr/local/share/ca-certificates/
          readOnly: true
        - name: cache
          mountPath: /var/cache/stackrox
        - name: helm-cluster-config
          mountPath: /run/secrets/stackrox.io/helm-cluster-config/
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: sensor-tls
          items:
          - key: sensor-cert.pem
            path: cert.pem
          - key: sensor-key.pem
            path: key.pem
          - key: ca.pem
            path: ca.pem
      - name: sensor-etc-ssl-volume
        emptyDir: {}
      - name: sensor-etc-pki-volume
        emptyDir: {}
      - name: additional-ca-volume
        secret:
          secretName: additional-ca-sensor
          optional: true
      - name: varlog
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: helm-cluster-config
        secret:
          secretName: helm-cluster-config
          optional: true
---
apiVersion: v1
kind: Service
metadata:
  name: sensor
  namespace: {{ ._rox._namespace }}
  labels:
    {{- include "srox.labels" (list . "service" "sensor") | nindent 4 }}
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    {{- include "srox.annotations" (list . "service" "sensor") | nindent 4 }}
spec:
  ports:
  - name: https
    port: 443
    targetPort: api
    protocol: TCP
  {{- if ._rox.sensor.exposeMonitoring }}
  - name: monitoring
    port: 9090
    targetPort: 9090
    protocol: TCP
  {{- end }}
  selector:
    app: sensor
  type: ClusterIP
  sessionAffinity: None
---

{{- if ._rox.env.istio }}
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: sensor-internal-no-istio-mtls
  namespace: {{ ._rox._namespace }}
  labels:
    {{- include "srox.labels" (list . "destinationrule" "sensor-internal-no-istio-mtls") | nindent 4 }}
  annotations:
    {{- include "srox.annotations" (list . "destinationrule" "sensor-internal-no-istio-mtls") | nindent 4 }}
    stackrox.io/description: "Disable Istio mTLS for port 443, since StackRox services use built-in mTLS."
spec:
  host: sensor.stackrox.svc.cluster.local
  trafficPolicy:
    portLevelSettings:
    - port:
        number: 443
      tls:
        mode: DISABLE
---
{{- end }}

apiVersion: v1
kind: Service
metadata:
  name: sensor-webhook
  namespace: {{ ._rox._namespace }}
  labels:
    {{- include "srox.labels" (list . "service" "sensor-webhook") | nindent 4 }}
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    {{- include "srox.annotations" (list . "service" "sensor-webhook") | nindent 4 }}
spec:
  ports:
  - name: https
    port: 443
    targetPort: webhook
    protocol: TCP
  selector:
    app: sensor
  type: ClusterIP
  sessionAffinity: None
